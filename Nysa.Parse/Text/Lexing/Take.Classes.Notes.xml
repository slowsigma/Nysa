<?xml version="1.0" encoding="utf-8" ?>
<Notes xml:space="preserve">

  <Note>
    Class Inheritance
    
    Take
    -- Node
       -- IdentifierNode
       -- ThenNode
       -- AssertNode
          -- StartNode
          -- EndNode
       -- ExpandNode
          -- OneNode
          -- SequenceNode
          -- UntilNode
          -- WhileNode
          -- StackNode
       -- AnyOneNode
       -- NotNode
       -- OrNode
       -- AndNode
       -- MaybeNode
       -- LongestNode
       -- SeekNode
    
  </Note>
  
  <Note>
    All capture rules must be satisfied to capture any characters and all
    assert rules must be satisfied to return true. If lexing comes to the
    end of input while an assertion or capture is not yet satisfied, then
    the rule fails.
    
    How are symbols determined in composite rules? This is likely the reason I decided a category was not a rule in the Lexingtyn project.
    
    Rule
    -- AnyRule  : a terminal rule with specific character alternatives to test a single position of the input
    -- TakeRule : a terminal rule with a specific sequence of characters to test at some starting position of the input
    -- MaybeRule: a composite rule that always returns true even if the resulting range is zero length
    --            the MaybeRule makes no sense inside an AssertRule since it always returns true
    -- NotRule  : 
    -- OrRule   : a composite node containing some number of alternative rules
    -- 
    
  
    Rule
    -- CaptureRule
       -- LiteralRule
          -- AnyRule (content: literal)
          -- TakeRule (content: literal)
       -- CompositeRule
          -- MaybeRule (content: CaptureRule)
          -- WhileRule (content: CaptureRule)
          -- UntilRule (content: CaptureRule)
          -- NotRule (content: CaptureRule)
          -- RangeRule (content: LiteralRule)
          -- StackRule (content: CaptureRule, CaptureRule)
          -- ThenRule (content: CaptureRule, CaptureRule)
       -- OrRule (content: CaptureRule[], OrTypes {longest | shortest})
    -- AssertRule
       -- AssertTrue (content: CaptureRule)
       -- AssertFalse (content: CaptureRule)
    -- SymbolRule (content: PriorAssert?, CaptureRule, AfterAssert?)
    -- TriviaRule (content: PriorAssert?, CaptureRule, AfterAssert?) // not really necessary
    -- StreamRule

  </Note>
  
  
</Notes>