<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:Nysa.CodeAnalysis.Visualizer">

   <Style x:Key="BasicTextBlock" TargetType="{x:Type TextBlock}">
      <Setter Property="FontFamily" Value="Segoe UI"/>
      <Setter Property="FontSize" Value="14"/>
   </Style>

   <Style x:Key="BasicTextBox" TargetType="{x:Type TextBox}">
      <Setter Property="FontFamily" Value="Segoe UI"/>
      <Setter Property="FontSize" Value="14"/>
      <Setter Property="BorderBrush" Value="#e3e9ef"/>
   </Style>

   <Style x:Key="DialogButton" TargetType="{x:Type Button}">
      <Setter Property="FontSize" Value="14"/>
      <Setter Property="FontWeight" Value="Thin"/>
      <Setter Property="BorderThickness" Value="1"/>
      <Setter Property="Background" Value="White"/>
      <Setter Property="Width" Value="70"/>
   </Style>

   <Style x:Key="BasicSelectionLabel" TargetType="{x:Type Label}">
      <Setter Property="FontFamily" Value="Segoe UI"/>
      <Setter Property="FontSize" Value="18"/>
   </Style>

   <Style x:Key="BasicSelectionCombo" TargetType="{x:Type ComboBox}">
      <Setter Property="FontFamily" Value="Segoe UI"/>
      <Setter Property="FontSize" Value="14"/>
   </Style>

   <Style x:Key="WindowHeaderLabel" TargetType="{x:Type Label}">
      <Setter Property="FontFamily" Value="Segoe UI"/>
      <Setter Property="FontSize" Value="16"/>
      <Setter Property="Padding" Value="14,6"/>
      <Setter Property="VerticalContentAlignment" Value="Center"/>
      <Setter Property="Background" Value="#43A047"/>
      <!-- #43A047  #242F8D -->
      <Setter Property="Foreground" Value="White"/>
      <Setter Property="Height" Value="72"/>
      <Setter Property="BitmapEffect">
         <Setter.Value>
            <DropShadowBitmapEffect Color="LightGray" ShadowDepth="2" Direction="270" Softness="0.2"/>
         </Setter.Value>
      </Setter>
   </Style>

   <Style x:Key="WindowBackgroundGrid" TargetType="{x:Type Grid}">
      <Setter Property="Margin" Value="0"/>
      <Setter Property="Background" Value="WhiteSmoke"/>
   </Style>

   <Style x:Key="WindowBackgroundPanel" TargetType="{x:Type StackPanel}">
      <Setter Property="Margin" Value="0"/>
      <Setter Property="Background" Value="WhiteSmoke"/>
   </Style>

   <Style x:Key="WindowContentPanel" TargetType="{x:Type StackPanel}">
      <Setter Property="Margin" Value="8,10"/>
      <Setter Property="Background" Value="White"/>
      <Setter Property="BitmapEffect">
         <Setter.Value>
            <DropShadowBitmapEffect Color="LightGray" ShadowDepth="2" Direction="310" Softness="0.2"/>
         </Setter.Value>
      </Setter>
   </Style>

   <Style x:Key="WindowContentAreaPanel" TargetType="{x:Type StackPanel}">
      <Setter Property="Margin" Value="14"/>
   </Style>

   <Style x:Key="WindowContentBlock" TargetType="{x:Type DockPanel}">
      <Setter Property="Margin" Value="12,14"/>
      <Setter Property="Background" Value="White"/>
      <Setter Property="BitmapEffect">
         <Setter.Value>
            <DropShadowBitmapEffect Color="LightGray" ShadowDepth="2" Direction="310" Softness="0.2"/>
         </Setter.Value>
      </Setter>
   </Style>

   <Style x:Key="WindowContentAreaBlock" TargetType="{x:Type DockPanel}">
      <Setter Property="Margin" Value="14"/>
   </Style>

   <Style x:Key="CloseButtonIcon" TargetType="{x:Type Path}" BasedOn="{x:Null}">
      <Setter Property="Stroke" Value="White" />
      <Setter Property="StrokeThickness" Value="1" />
      <Setter Property="Data" Value="M 1,1 L 10,10 M 10,1 L 1,10" />
   </Style>

   <Style x:Key="MinimizeButtonIcon" TargetType="{x:Type Path}" BasedOn="{x:Null}">
      <Setter Property="Stroke" Value="White" />
      <Setter Property="StrokeThickness" Value="1" />
      <Setter Property="Data" Value="M 1,11 L 13,11 L 13,12 L 1,12" />
   </Style>

   <Style x:Key="MaximizeButtonIcon" TargetType="{x:Type Path}" BasedOn="{x:Null}">
      <Setter Property="Stroke" Value="White" />
      <Setter Property="StrokeThickness" Value="1" />
      <Setter Property="Data" Value="M 1,1 L 1,10 L 10,10 L 10,1 L 1,1 M 1,3 L 10,3" />
   </Style>

   <Style x:Key="RestoreButtonIcon" TargetType="{x:Type Path}" BasedOn="{x:Null}">
      <Setter Property="Stroke" Value="White" />
      <Setter Property="StrokeThickness" Value="1" />
      <Setter Property="Data" Value="M 10,5 L 10,1 L 1,1 L 1,11 L 4,11 M 1,3 L 10,3 M 4,5 L 13,5 L 13,15 L 4,15 L 4,5 M 4,7 L 13,7 " />
   </Style>

   <Style x:Key="WindowCloseButton" TargetType="{x:Type Button}">
      <Setter Property="BorderThickness" Value="0"/>
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="Padding" Value="7,0"/>
      <Setter Property="Content">
         <Setter.Value>
            <Border Background="Transparent" BorderThickness="0" VerticalAlignment="Center" Cursor="Arrow">
               <Path Style="{StaticResource CloseButtonIcon}"/>
            </Border>
         </Setter.Value>
      </Setter>
   </Style>

   <Style x:Key="WindowMinimizeButton" TargetType="{x:Type Button}">
      <Setter Property="BorderThickness" Value="0"/>
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="Padding" Value="7,0"/>
      <Setter Property="Content">
         <Setter.Value>
            <Border Background="Transparent" BorderThickness="0" VerticalAlignment="Center" Cursor="Arrow">
               <Path Style="{StaticResource MinimizeButtonIcon}"/>
            </Border>
         </Setter.Value>
      </Setter>
   </Style>

   <Style x:Key="WindowMaximizeButton" TargetType="{x:Type Button}">
      <Setter Property="BorderThickness" Value="0"/>
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="Padding" Value="7,0"/>
      <Setter Property="Content">
         <Setter.Value>
            <Border Background="Transparent" BorderThickness="0" VerticalAlignment="Center" Cursor="Arrow">
               <Path Style="{StaticResource MaximizeButtonIcon}"/>
            </Border>
         </Setter.Value>
      </Setter>
   </Style>

   <Style x:Key="WindowRestoreButton" TargetType="{x:Type Button}">
      <Setter Property="BorderThickness" Value="0"/>
      <Setter Property="Background" Value="Transparent"/>
      <Setter Property="Padding" Value="7,0"/>
      <Setter Property="Content">
         <Setter.Value>
            <Border Background="Transparent" BorderThickness="0" VerticalAlignment="Center" Cursor="Arrow">
               <Path Style="{StaticResource RestoreButtonIcon}"/>
            </Border>
         </Setter.Value>
      </Setter>
   </Style>


   <Style x:Key="SearchTextBox" TargetType="{x:Type TextBox}">
      <Setter Property="FontFamily" Value="Segoe UI"/>
      <Setter Property="FontSize" Value="16"/>
      <Setter Property="Background" Value="#EEEEEE"/>
      <Setter Property="BorderThickness" Value="0"/>
      <Setter Property="Padding" Value="3"/>
   </Style>

   <Style x:Key="SearchPlaceholder" TargetType="{x:Type TextBlock}">
      <Setter Property="FontFamily" Value="Segoe UI"/>
      <Setter Property="FontSize" Value="16"/>
      <Setter Property="FontStyle" Value="Italic"/>
      <Setter Property="Foreground" Value="Gray"/>
      <Setter Property="IsHitTestVisible" Value="False"/>
      <Setter Property="Margin" Value="10,0,0,0"/>
   </Style>

   <Style x:Key="ListItemHyperlink" TargetType="{x:Type Hyperlink}">
      <Setter Property="FontFamily" Value="Segoe UI"/>
      <Setter Property="FontSize" Value="14"/>
      <Setter Property="Foreground" Value="{x:Static SystemColors.WindowTextBrush}"/>
      <Setter Property="TextBlock.TextDecorations" Value="{x:Null}"/>
   </Style>

   <Style x:Key="ListItemTextBlock" TargetType="{x:Type TextBlock}">
      <Setter Property="FontFamily" Value="Segoe UI"/>
      <Setter Property="FontSize" Value="14"/>
   </Style>

   <Style x:Key="SelectionListBox" TargetType="{x:Type ListBox}">
      <Setter Property="BorderThickness" Value="0"/>

   </Style>


   <SolidColorBrush x:Key="ComboBoxNormalBorderBrush" Color="#e3e9ef" />
   <SolidColorBrush x:Key="ComboBoxNormalBackgroundBrush" Color="Transparent" />
   <SolidColorBrush x:Key="ComboBoxDisabledForegroundBrush" Color="#888888" />
   <SolidColorBrush x:Key="ComboBoxDisabledBackgroundBrush" Color="#eeeeee" />
   <SolidColorBrush x:Key="ComboBoxDisabledBorderBrush" Color="#888888" />

   <ControlTemplate TargetType="ToggleButton" x:Key="ComboBoxToggleButtonTemplate">
      <Grid>
         <Grid.ColumnDefinitions>
            <ColumnDefinition />
            <ColumnDefinition Width="20" />
         </Grid.ColumnDefinitions>
         <Border Grid.ColumnSpan="2" Name="Border"
              BorderBrush="{StaticResource ComboBoxNormalBorderBrush}" 
              CornerRadius="0" BorderThickness="1, 1, 1, 1" 
              Background="{StaticResource ComboBoxNormalBackgroundBrush}" />
         <Border Grid.Column="1" Margin="1, 1, 1, 1" BorderBrush="#444444" Name="ButtonBorder"
              CornerRadius="0, 0, 0, 0" BorderThickness="0, 0, 0, 0" 
              Background="{StaticResource ComboBoxNormalBackgroundBrush}" />

         <Path Name="Arrow" Grid.Column="1" 
            Data="M0,0 L0,2 L4,6 L8,2 L8,0 L4,4 z"
            HorizontalAlignment="Center" Fill="#444444"
            VerticalAlignment="Center" />
      </Grid>
      <ControlTemplate.Triggers>
         <Trigger Property="UIElement.IsMouseOver" Value="True">
            <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
         </Trigger>
         <Trigger Property="ToggleButton.IsChecked" Value="True">
            <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="WhiteSmoke"/>
            <Setter Property="Shape.Fill" TargetName="Arrow" Value="#FF8D979E"/>
         </Trigger>
         <Trigger Property="UIElement.IsEnabled" Value="False">
            <Setter Property="Panel.Background" TargetName="Border" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
            <Setter Property="Panel.Background" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBackgroundBrush}"/>
            <Setter Property="Border.BorderBrush" TargetName="ButtonBorder" Value="{StaticResource ComboBoxDisabledBorderBrush}"/>
            <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
            <Setter Property="Shape.Fill" TargetName="Arrow" Value="#999999"/>
         </Trigger>
      </ControlTemplate.Triggers>
   </ControlTemplate>

   <Style x:Key="ComboBoxFlatStyle"  TargetType="{x:Type ComboBox}">
      <Setter Property="FontFamily" Value="Segoe UI"/>
      <Setter Property="FontSize" Value="14"/>
      <Setter Property="UIElement.SnapsToDevicePixels" Value="True"/>
      <Setter Property="FrameworkElement.OverridesDefaultStyle" Value="True"/>
      <Setter Property="ScrollViewer.HorizontalScrollBarVisibility" Value="Auto"/>
      <Setter Property="ScrollViewer.VerticalScrollBarVisibility" Value="Auto"/>
      <Setter Property="ScrollViewer.CanContentScroll" Value="True"/>
      <Setter Property="TextElement.Foreground" Value="Black"/>
      <Setter Property="FrameworkElement.FocusVisualStyle" Value="{x:Null}"/>
      <Setter Property="Control.Template">
         <Setter.Value>
            <ControlTemplate TargetType="ComboBox">
               <Grid>
                  <ToggleButton Name="ToggleButton" Grid.Column="2"
                ClickMode="Press" Focusable="False"
                IsChecked="{Binding Path=IsDropDownOpen, RelativeSource={RelativeSource TemplatedParent}, Mode=TwoWay}"
                Template="{StaticResource ComboBoxToggleButtonTemplate}"/>

                  <ContentPresenter Name="ContentSite" Margin="5, 3, 23, 3" IsHitTestVisible="False"
                              HorizontalAlignment="Left" VerticalAlignment="Center"                              
                              Content="{TemplateBinding ComboBox.SelectionBoxItem}" 
                              ContentTemplate="{TemplateBinding ComboBox.SelectionBoxItemTemplate}"
                              ContentTemplateSelector="{TemplateBinding ItemTemplateSelector}"/>
                  <TextBox Name="PART_EditableTextBox" Margin="3, 3, 23, 3"                     
                     IsReadOnly="{TemplateBinding IsReadOnly}"
                     Visibility="Hidden" Background="Transparent"
                     HorizontalAlignment="Left" VerticalAlignment="Center"
                     Focusable="True" >
                     <TextBox.Template>
                        <ControlTemplate TargetType="TextBox" >
                           <Border Name="PART_ContentHost" Focusable="False" />
                        </ControlTemplate>
                     </TextBox.Template>
                  </TextBox>
                  <!-- Popup showing items -->
                  <Popup Name="Popup" Placement="Bottom"
                   Focusable="False" AllowsTransparency="True"
                   IsOpen="{TemplateBinding ComboBox.IsDropDownOpen}"
                   PopupAnimation="Slide">
                     <Grid Name="DropDown" SnapsToDevicePixels="True"
                    MinWidth="{TemplateBinding FrameworkElement.ActualWidth}"
                    MaxHeight="{TemplateBinding ComboBox.MaxDropDownHeight}">
                        <Border Name="DropDownBorder" Background="White" Margin="0, 1, 0, 0"
                        CornerRadius="0" BorderThickness="1,1,1,1" 
                        BorderBrush="{StaticResource ComboBoxNormalBorderBrush}"/>
                        <ScrollViewer Margin="4" SnapsToDevicePixels="True">
                           <ItemsPresenter KeyboardNavigation.DirectionalNavigation="Contained" />
                        </ScrollViewer>
                     </Grid>
                  </Popup>
               </Grid>
               <ControlTemplate.Triggers>
                  <Trigger Property="ItemsControl.HasItems" Value="False">
                     <Setter Property="FrameworkElement.MinHeight" TargetName="DropDownBorder" Value="95"/>
                  </Trigger>
                  <Trigger Property="UIElement.IsEnabled" Value="False">
                     <Setter Property="TextElement.Foreground" Value="{StaticResource ComboBoxDisabledForegroundBrush}"/>
                  </Trigger>
                  <Trigger Property="ItemsControl.IsGrouping" Value="True">
                     <Setter Property="ScrollViewer.CanContentScroll" Value="False"/>
                  </Trigger>
                  <Trigger Property="ComboBox.IsEditable" Value="True">
                     <Setter Property="KeyboardNavigation.IsTabStop" Value="False"/>
                     <Setter Property="UIElement.Visibility" TargetName="PART_EditableTextBox" Value="Visible"/>
                     <Setter Property="UIElement.Visibility" TargetName="ContentSite" Value="Hidden"/>
                  </Trigger>
               </ControlTemplate.Triggers>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <Style x:Key="DialogWindowStyle" TargetType="{x:Type Window}">
      <Setter Property="SnapsToDevicePixels" Value="True"/>
      <Setter Property="WindowState" Value="Normal"/>
      <Setter Property="WindowStyle" Value="None"/>
      <Setter Property="WindowChrome.WindowChrome">
         <Setter.Value>
            <WindowChrome CaptionHeight="20" ResizeBorderThickness="3"/>
         </Setter.Value>
      </Setter>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type Window}">
               <Grid Style="{StaticResource WindowBackgroundGrid}">
                  <Grid.RowDefinitions>
                     <RowDefinition Height="Auto"/>
                     <RowDefinition Height="*"/>
                  </Grid.RowDefinitions>
                  <Label Grid.Row="0" Content="{TemplateBinding Title}" Style="{StaticResource WindowHeaderLabel}"/>

                  <DockPanel Grid.Row="1" Style="{StaticResource WindowContentBlock}">
                     <DockPanel Style="{StaticResource WindowContentAreaBlock}">
                        <AdornerDecorator>
                           <ContentPresenter/>
                        </AdornerDecorator>
                     </DockPanel>
                  </DockPanel>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

   <Style x:Key="NormalWindowStyle" TargetType="{x:Type local:NormalWindow}">
      <Setter Property="SnapsToDevicePixels" Value="True"/>
      <Setter Property="WindowState" Value="Normal"/>
      <Setter Property="WindowStyle" Value="None"/>
      <Setter Property="WindowChrome.WindowChrome">
         <Setter.Value>
            <WindowChrome CaptionHeight="16" ResizeBorderThickness="3"/>
         </Setter.Value>
      </Setter>
      <Setter Property="Template">
         <Setter.Value>
            <ControlTemplate TargetType="{x:Type local:NormalWindow}">
               <Grid Style="{StaticResource WindowBackgroundGrid}">
                  <Grid.RowDefinitions>
                     <RowDefinition Height="Auto"/>
                     <RowDefinition Height="*"/>
                  </Grid.RowDefinitions>

                  <Grid Grid.Row="0">
                     <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="Auto"/>
                        <RowDefinition Height="*"/>
                     </Grid.RowDefinitions>
                     <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="*"/>
                        <ColumnDefinition Width="Auto"/>
                     </Grid.ColumnDefinitions>

                     <Label Grid.Row="0" Grid.RowSpan="3" Grid.Column="0" Grid.ColumnSpan="2" Content="{TemplateBinding Title}" Style="{StaticResource WindowHeaderLabel}"/>

                     <StackPanel Grid.Row="1" Grid.Column="1" Orientation="Horizontal" FlowDirection="RightToLeft" Height="20" Margin="0,0,10,0">
                        <Button Command="{Binding Path=WindowCloseCommand}" Visibility="{Binding Path=WindowCloseVisibility}" Style="{StaticResource WindowCloseButton}"/>
                        <Button Command="{Binding Path=WindowRestoreCommand}" Visibility="{Binding Path=WindowRestoreVisibility}" Style="{StaticResource WindowRestoreButton}"/>
                        <Button Command="{Binding Path=WindowMaximizeCommand}" Visibility="{Binding Path=WindowMaximizeVisibility}" Style="{StaticResource WindowMaximizeButton}"/>
                        <Button Command="{Binding Path=WindowMinimizeCommand}" Visibility="{Binding Path=WindowMinimizeVisibility}" Style="{StaticResource WindowMinimizeButton}"/>
                     </StackPanel>
                  </Grid>

                  <AdornerDecorator Grid.Row="1">
                     <ContentPresenter/>
                  </AdornerDecorator>
               </Grid>
            </ControlTemplate>
         </Setter.Value>
      </Setter>
   </Style>

</ResourceDictionary>