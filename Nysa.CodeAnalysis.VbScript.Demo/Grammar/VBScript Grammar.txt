<AccessModifierOpt> ::= "Public" | "Private" | 
<AddExpr> ::= <AddExpr> "+" <ModExpr> | <AddExpr> "-" <ModExpr> | <ModExpr>
<AndExpr> ::= <AndExpr> "And" <NotExpr> | <NotExpr>
<Arg> ::= <ArgModifierOpt> <ExtendedID> "(" ")" | <ArgModifierOpt> <ExtendedID>
<ArgList> ::= <Arg> "," <ArgList> | <Arg>
<ArgModifierOpt> ::= "ByVal" | "ByRef" | 
<ArrayRankList> ::= <IntLiteral> "," <ArrayRankList> | <IntLiteral> | 
<AssignStmt> ::= <LeftExpr> "=" <Expr> | "Set" <LeftExpr> "=" <Expr>
<BlockConstDecl> ::= "Const" <ConstList> <NL>
<BlockStmt> ::= <VarDecl> | <RedimStmt> | <IfStmt> | <WithStmt> | <SelectStmt> | <LoopStmt> | <ForStmt> | <BlockConstDecl> | <InlineStmt> <NL>
<BlockStmtList> ::= <BlockStmt> <BlockStmtList> | 
<BoolLiteral> ::= "True" | "False"
<CallStmt> ::= "Call" <LeftExpr>
<CaseStmtList> ::= "Case" <ExprList> <NLOpt> <BlockStmtList> <CaseStmtList> | "Case" "Else" <NLOpt> <BlockStmtList> | 
<ClassDecl> ::= "Class" <ExtendedID> <NL> <MemberDeclList> "End" "Class" <NL>
<CommaExprList> ::= "," <Expr> <CommaExprList> | "," <CommaExprList> | "," <Expr> | ","
<CompareExpr> ::= <CompareExpr> "Is" <ConcatExpr> | <CompareExpr> "Is" "Not" <ConcatExpr> | <CompareExpr> ">=" <ConcatExpr> | <CompareExpr> "=>" <ConcatExpr> | <CompareExpr> "<=" <ConcatExpr> | <CompareExpr> "=<" <ConcatExpr> | <CompareExpr> ">" <ConcatExpr> | <CompareExpr> "<" <ConcatExpr> | <CompareExpr> "<>" <ConcatExpr> | <CompareExpr> "=" <ConcatExpr> | <ConcatExpr>
<ConcatExpr> ::= <ConcatExpr> "&" <AddExpr> | <AddExpr>
<ConstDecl> ::= <AccessModifierOpt> "Const" <ConstList> <NL>
<ConstExpr> ::= <BoolLiteral> | <IntLiteral> | {FloatLiteral} | {StringLiteral} | {DateLiteral} | <Nothing>
<ConstExprDef> ::= "(" <ConstExprDef> ")" | "-" <ConstExprDef> | "+" <ConstExprDef> | <ConstExpr>
<ConstList> ::= <ExtendedID> "=" <ConstExprDef> "," <ConstList> | <ExtendedID> "=" <ConstExprDef> | <ExtendedID> "," <ConstList> | <ExtendedID>
<ElseOpt> ::= "Else" <InlineStmtList> | 
<ElseStmtList> ::= "ElseIf" <Expr> "Then" <NL> <BlockStmtList> <ElseStmtList> | "ElseIf" <Expr> "Then" <InlineStmt> <NL> <ElseStmtList> | "Else" <InlineStmt> <NL> | "Else" <NL> <BlockStmtList> | 
<EndIfOpt> ::= "End" "If" | 
<EqvExpr> ::= <EqvExpr> "Eqv" <XorExpr> | <XorExpr>
<ErrorStmt> ::= "On" "Error" "Resume" "Next" | "On" "Error" "GoTo" {IntLiteral}
<ExitStmt> ::= "Exit" "Do" | "Exit" "For" | "Exit" "Function" | "Exit" "Property" | "Exit" "Sub"
<ExpExpr> ::= <Value> "^" <ExpExpr> | <Value>
<Expr> ::= <ImpExpr>
<ExprList> ::= <Expr> "," <ExprList> | <Expr>
<ExtendedID> ::= <SafeKeywordID> | {ID}
<FieldDecl> ::= "Private" <FieldName> <OtherVarsOpt> <NL> | "Public" <FieldName> <OtherVarsOpt> <NL>
<FieldID> ::= {ID} | "Default" | "Erase" | "Error" | "Explicit" | "Step"
<FieldName> ::= <FieldID> "(" <ArrayRankList> ")" | <FieldID>
<ForStmt> ::= "For" <ExtendedID> "=" <Expr> "To" <Expr> <StepOpt> <NL> <BlockStmtList> "Next" <NL> | "For" "Each" <ExtendedID> "In" <Expr> <NL> <BlockStmtList> "Next" <NL>
<FunctionDecl> ::= <MethodAccessOpt> "Function" <ExtendedID> <MethodArgList> <NL> <MethodStmtList> "End" "Function" <NL> | <MethodAccessOpt> "Function" <ExtendedID> <MethodArgList> <InlineStmt> "End" "Function" <NL>
<GlobalStmt> ::= <OptionExplicit> | <ClassDecl> | <FieldDecl> | <ConstDecl> | <SubDecl> | <FunctionDecl> | <BlockStmt>
<GlobalStmtList> ::= <GlobalStmt> <GlobalStmtList> | 
<IfStmt> ::= "If" <Expr> "Then" <NL> <BlockStmtList> <ElseStmtList> "End" "If" <NL>
<ImpExpr> ::= <ImpExpr> "Imp" <EqvExpr> | <EqvExpr>
<IndexOrParams> ::= "(" <Expr> <CommaExprList> ")" | "(" <CommaExprList> ")" | "(" <Expr> ")" | "(" ")"
<IndexOrParamsDot> ::= "(" <Expr> <CommaExprList> ")." | "(" <CommaExprList> ")." | "(" <Expr> ")." | "(" ")."
<IndexOrParamsList> ::= <IndexOrParams> <IndexOrParamsList> | <IndexOrParams>
<IndexOrParamsListDot> ::= <IndexOrParams> <IndexOrParamsListDot> | <IndexOrParamsDot>
<InlineIfStmt> ::= "If" <Expr> "Then" <InlineStmtList> <ElseOpt> <EndIfOpt>
<InlineNL> ::= ":" <InlineNL> | ":"
<InlineStmt> ::= <AssignStmt> | <CallStmt> | <SubCallStmt> | <ErrorStmt> | <ExitStmt> | <InlineIfStmt> | "Erase" <ExtendedID>
<InlineStmtList> ::= <InlineStmt> <InlineNL> <InlineStmtList> | <InlineStmt> <InlineNL> | <InlineStmt>
<IntDivExpr> ::= <IntDivExpr> "\" <MultExpr> | <MultExpr>
<IntLiteral> ::= {IntLiteral} | {HexLiteral} | {OctLiteral}
<KeywordID> ::= <SafeKeywordID> | "And" | "ByRef" | "ByVal" | "Call" | "Case" | "Class" | "Const" | "Dim" | "Do" | "Each" | "Else" | "ElseIf" | "Empty" | "End" | "Eqv" | "Exit" | "False" | "For" | "Function" | "Get" | "GoTo" | "If" | "Imp" | "In" | "Is" | "Let" | "Loop" | "Mod" | "New" | "Next" | "Not" | "Nothing" | "Null" | "On" | "Option" | "Or" | "Preserve" | "Private" | "Public" | "Redim" | "Resume" | "Select" | "Set" | "Sub" | "Then" | "To" | "True" | "Until" | "WEnd" | "While" | "With" | "Xor"
<LeftExpr> ::= <QualifiedID> <IndexOrParamsList> "." <LeftExprTail> | <QualifiedID> <IndexOrParamsListDot> <LeftExprTail> | <QualifiedID> <IndexOrParamsList> | <QualifiedID> | <NewObjectExpr> | <SafeKeywordID>
<LeftExprTail> ::= <QualifiedIDTail> <IndexOrParamsList> "." <LeftExprTail> | <QualifiedIDTail> <IndexOrParamsListDot> <LeftExprTail> | <QualifiedIDTail> <IndexOrParamsList> | <QualifiedIDTail>
<LoopStmt> ::= "Do" <LoopType> <Expr> <NL> <BlockStmtList> "Loop" <NL> | "Do" <NL> <BlockStmtList> "Loop" <LoopType> <Expr> <NL> | "Do" <NL> <BlockStmtList> "Loop" <NL> | "While" <Expr> <NL> <BlockStmtList> "WEnd" <NL>
<LoopType> ::= "While" | "Until"
<MemberDecl> ::= <FieldDecl> | <VarDecl> | <ConstDecl> | <SubDecl> | <FunctionDecl> | <PropertyDecl>
<MemberDeclList> ::= <MemberDecl> <MemberDeclList> | 
<MethodAccessOpt> ::= "Public" "Default" | <AccessModifierOpt>
<MethodArgList> ::= "(" <ArgList> ")" | "(" ")" | 
<MethodStmt> ::= <BlockStmt>
<MethodStmtList> ::= <MethodStmt> <MethodStmtList> | 
<ModExpr> ::= <ModExpr> "Mod" <IntDivExpr> | <IntDivExpr>
<MultExpr> ::= <MultExpr> "*" <UnaryExpr> | <MultExpr> "/" <UnaryExpr> | <UnaryExpr>
<NewObjectExpr> ::= "New" <LeftExpr>
<NL> ::= {new-line} <NL> | {new-line} | <InlineNL> <NL> | <InlineNL>
<NLOpt> ::= <NL> | 
<NotExpr> ::= "Not" <NotExpr> | <CompareExpr>
<Nothing> ::= "Nothing" | "Null" | "Empty"
<OptionExplicit> ::= "Option" "Explicit" <NL>
<OrExpr> ::= <OrExpr> "Or" <AndExpr> | <AndExpr>
<OtherVarsOpt> ::= "," <VarName> <OtherVarsOpt> | 
<Program> ::= <NLOpt> <GlobalStmtList> {EOI}
<PropertyAccessType> ::= "Get" | "Let" | "Set"
<PropertyDecl> ::= <MethodAccessOpt> "Property" <PropertyAccessType> <ExtendedID> <MethodArgList> <NL> <MethodStmtList> "End" "Property" <NL>
<QualifiedID> ::= {IDDot} <QualifiedIDTail> | {DotIDDot} <QualifiedIDTail> | {ID} | {DotID}
<QualifiedIDTail> ::= {IDDot} <QualifiedIDTail> | {ID} | <KeywordID>
<RedimDecl> ::= <ExtendedID> "(" <ExprList> ")"
<RedimDeclList> ::= <RedimDecl> "," <RedimDeclList> | <RedimDecl>
<RedimStmt> ::= "Redim" <RedimDeclList> <NL> | "Redim" "Preserve" <RedimDeclList> <NL>
<SafeKeywordID> ::= "Default" | "Erase" | "Error" | "Explicit" | "Property" | "Step"
<SelectStmt> ::= "Select" "Case" <Expr> <NL> <CaseStmtList> "End" "Select" <NL>
<StepOpt> ::= "Step" <Expr> | 
<SubCallStmt> ::= <QualifiedID> <SubSafeExprOpt> <CommaExprList> | <QualifiedID> <SubSafeExprOpt> | <QualifiedID> "(" <Expr> ")" <CommaExprList> | <QualifiedID> "(" <Expr> ")" | <QualifiedID> "(" ")" | <QualifiedID> <IndexOrParamsList> "." <LeftExprTail> <SubSafeExprOpt> <CommaExprList> | <QualifiedID> <IndexOrParamsListDot> <LeftExprTail> <SubSafeExprOpt> <CommaExprList> | <QualifiedID> <IndexOrParamsList> "." <LeftExprTail> <SubSafeExprOpt> | <QualifiedID> <IndexOrParamsListDot> <LeftExprTail> <SubSafeExprOpt>
<SubDecl> ::= <MethodAccessOpt> "Sub" <ExtendedID> <MethodArgList> <NL> <MethodStmtList> "End" "Sub" <NL> | <MethodAccessOpt> "Sub" <ExtendedID> <MethodArgList> <InlineStmt> "End" "Sub" <NL>
<SubSafeAddExpr> ::= <SubSafeAddExpr> "+" <ModExpr> | <SubSafeAddExpr> "-" <ModExpr> | <SubSafeModExpr>
<SubSafeAndExpr> ::= <SubSafeAndExpr> "And" <NotExpr> | <SubSafeNotExpr>
<SubSafeCompareExpr> ::= <SubSafeCompareExpr> "Is" <ConcatExpr> | <SubSafeCompareExpr> "Is" "Not" <ConcatExpr> | <SubSafeCompareExpr> ">=" <ConcatExpr> | <SubSafeCompareExpr> "=>" <ConcatExpr> | <SubSafeCompareExpr> "<=" <ConcatExpr> | <SubSafeCompareExpr> "=<" <ConcatExpr> | <SubSafeCompareExpr> ">" <ConcatExpr> | <SubSafeCompareExpr> "<" <ConcatExpr> | <SubSafeCompareExpr> "<>" <ConcatExpr> | <SubSafeCompareExpr> "=" <ConcatExpr> | <SubSafeConcatExpr>
<SubSafeConcatExpr> ::= <SubSafeConcatExpr> "&" <AddExpr> | <SubSafeAddExpr>
<SubSafeEqvExpr> ::= <SubSafeEqvExpr> "Eqv" <XorExpr> | <SubSafeXorExpr>
<SubSafeExpExpr> ::= <SubSafeValue> "^" <ExpExpr> | <SubSafeValue>
<SubSafeExpr> ::= <SubSafeImpExpr>
<SubSafeExprOpt> ::= <SubSafeExpr> | 
<SubSafeImpExpr> ::= <SubSafeImpExpr> "Imp" <EqvExpr> | <SubSafeEqvExpr>
<SubSafeIntDivExpr> ::= <SubSafeIntDivExpr> "\" <MultExpr> | <SubSafeMultExpr>
<SubSafeModExpr> ::= <SubSafeModExpr> "Mod" <IntDivExpr> | <SubSafeIntDivExpr>
<SubSafeMultExpr> ::= <SubSafeMultExpr> "*" <UnaryExpr> | <SubSafeMultExpr> "/" <UnaryExpr> | <SubSafeUnaryExpr>
<SubSafeNotExpr> ::= "Not" <NotExpr> | <SubSafeCompareExpr>
<SubSafeOrExpr> ::= <SubSafeOrExpr> "Or" <AndExpr> | <SubSafeAndExpr>
<SubSafeUnaryExpr> ::= "-" <UnaryExpr> | "+" <UnaryExpr> | <SubSafeExpExpr>
<SubSafeValue> ::= <ConstExpr> | <LeftExpr>
<SubSafeXorExpr> ::= <SubSafeXorExpr> "Xor" <OrExpr> | <SubSafeOrExpr>
<UnaryExpr> ::= "-" <UnaryExpr> | "+" <UnaryExpr> | <ExpExpr>
<Value> ::= <ConstExpr> | <LeftExpr> | "(" <Expr> ")" | "(" <Expr> ")." <LeftExprTail>
<VarDecl> ::= "Dim" <VarName> <OtherVarsOpt> <NL>
<VarName> ::= <ExtendedID> "(" <ArrayRankList> ")" | <ExtendedID>
<WithStmt> ::= "With" <Expr> <NL> <BlockStmtList> "End" "With" <NL>
<XorExpr> ::= <XorExpr> "Xor" <OrExpr> | <OrExpr>
